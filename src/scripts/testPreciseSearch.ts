import { googleBooksService } from '../services/googleBooks.service';
import { logger } from '../utils/logger';

async function testPreciseBookSearch() {
  console.log('üìö Testing b√∫squeda precisa de libros...');
  console.log('='.repeat(50));

  const testCases = [
    {
      query: 'Harry Potter Y El Prisionero de Azkaban',
      expectedInTitle: 'prisionero',
      maxResults: 5
    },
    {
      query: 'Cien a√±os de soledad',
      expectedInTitle: 'cien a√±os',
      maxResults: 5
    },
    {
      query: 'El Quijote',
      expectedInTitle: 'quijote',
      maxResults: 5
    },
    {
      query: 'Garc√≠a M√°rquez',
      expectedInAuthors: 'garc√≠a m√°rquez',
      maxResults: 8
    }
  ];

  for (const testCase of testCases) {
    console.log(`\nüîç Testing: "${testCase.query}"`);
    console.log('-'.repeat(40));
    
    const startTime = Date.now();
    
    try {
      const results = await googleBooksService.searchBooks(testCase.query, testCase.maxResults);
      const duration = Date.now() - startTime;
      
      console.log(`‚è±Ô∏è  Tiempo: ${duration}ms`);
      console.log(`üìä Resultados: ${results.length}`);
      console.log(`üíæ Desde cache: ${results.filter(r => r.isFromCache).length}`);
      console.log(`üåê Desde API: ${results.filter(r => !r.isFromCache).length}`);
      
      // Verificar precisi√≥n de resultados
      let relevantResults = 0;
      
      console.log('\nüìñ Primeros resultados:');
      results.slice(0, 3).forEach((book, index) => {
        const title = book.title.toLowerCase();
        const authors = book.authors.join(' ').toLowerCase();
        
        let isRelevant = false;
        
        if (testCase.expectedInTitle && title.includes(testCase.expectedInTitle)) {
          isRelevant = true;
        }
        
        if (testCase.expectedInAuthors && authors.includes(testCase.expectedInAuthors)) {
          isRelevant = true;
        }
        
        if (isRelevant) relevantResults++;
        
        const relevanceIcon = isRelevant ? '‚úÖ' : '‚ö†Ô∏è';
        
        console.log(`   ${index + 1}. ${relevanceIcon} ${book.title}`);
        console.log(`      üë§ ${book.authors.join(', ')}`);
        
        if (book.publishedDate) {
          console.log(`      üìÖ ${book.publishedDate}`);
        }
      });
      
      const precision = (relevantResults / Math.min(results.length, 3)) * 100;
      console.log(`\nüéØ Precisi√≥n: ${precision.toFixed(1)}% (${relevantResults}/${Math.min(results.length, 3)} relevantes)`);
      
      // An√°lisis de calidad
      if (precision >= 80) {
        console.log('üü¢ Excelente precisi√≥n');
      } else if (precision >= 60) {
        console.log('üü° Buena precisi√≥n');
      } else {
        console.log('üî¥ Precisi√≥n mejorable');
      }
      
    } catch (error) {
      console.error(`‚ùå Error: ${error}`);
    }
  }
  
  // Test de queries cortos vs largos
  console.log('\n' + '='.repeat(50));
  console.log('üìè Testing queries de diferentes longitudes...');
  
  const lengthTests = [
    'Harry', // Corto - deber√≠a ser menos preciso
    'Harry Potter', // Medio - mejor precisi√≥n
    'Harry Potter Y El Prisionero de Azkaban' // Largo - m√°xima precisi√≥n
  ];
  
  for (const query of lengthTests) {
    console.log(`\nüîç "${query}" (${query.length} chars)`);
    const startTime = Date.now();
    
    try {
      const results = await googleBooksService.searchBooks(query, 3);
      const duration = Date.now() - startTime;
      
      console.log(`   ‚è±Ô∏è  ${duration}ms, ${results.length} resultados`);
      
      const harryPotterResults = results.filter(book => 
        book.title.toLowerCase().includes('harry potter')
      ).length;
      
      console.log(`   üìö Harry Potter books: ${harryPotterResults}/${results.length}`);
      
    } catch (error) {
      console.error(`   ‚ùå Error: ${error}`);
    }
  }
  
  console.log('\nüéâ Testing completado!');
}

// Test de stress
async function testSearchStress() {
  console.log('\nüî• Stress test de b√∫squeda...');
  
  const queries = [
    'Don Quijote',
    'Cervantes',
    'Garc√≠a M√°rquez',
    'Harry Potter',
    'Stephen King'
  ];
  
  const startTime = Date.now();
  
  try {
    const promises = queries.map(query => 
      googleBooksService.searchBooks(query, 5)
    );
    
    const results = await Promise.all(promises);
    const duration = Date.now() - startTime;
    
    const totalResults = results.reduce((sum, r) => sum + r.length, 0);
    
    console.log(`‚ö° ${queries.length} b√∫squedas paralelas en ${duration}ms`);
    console.log(`üìä Total resultados: ${totalResults}`);
    console.log(`‚ö° Promedio: ${(duration / queries.length).toFixed(1)}ms por b√∫squeda`);
    
  } catch (error) {
    console.error('‚ùå Stress test fall√≥:', error);
  }
}

async function main() {
  try {
    await testPreciseBookSearch();
    await testSearchStress();
    
    // Cache stats
    console.log('\nüìä Estad√≠sticas de cache:');
    const stats = await googleBooksService.getCacheStats();
    console.log(JSON.stringify(stats, null, 2));
    
  } catch (error) {
    console.error('‚ùå Error en testing:', error);
  } finally {
    process.exit(0);
  }
}

if (require.main === module) {
  main();
}

export { testPreciseBookSearch, testSearchStress };
